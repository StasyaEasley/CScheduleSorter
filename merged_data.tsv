Class	Class Name	Description	Career	Offered	Enrollment Requirement	Grading Basis	Course Components	Equivalent To
CSC 101	 Introduction to Computer Science (3 units)	This course introduces students to some of the big ideas in computer science. It will excite students about the application of computer science to various disciplines, and show the social impact possible through the use of technology in developing regions, politics, medicine, and other fields.	Undergraduate	 Fall, Spring	Enrollment in this course is not open to Computer Science majors.	Regular Grades	Lecture        Required	None
CSC 110	 Introduction to Computer Programming I (4 units)	An introduction to programming with an emphasis on solving problems drawn from a variety of domains. Topics include basic control and data structures, problem solving strategies, and software development tools and techniques.	Undergraduate	 Fall, Spring, Summer	PPL 60+ or SAT I MSS 640+ or ACT MATH 26+ or (C or higher in [CSC 101 or MATH 112 or MATH 108]) or one courses from MATH 113, 116, 120R, 122A, 122B, or 125. Test scores expire after 2 years.	Regular Grades	Lecture        Required	None
CSC 120	 Introduction to Computer Programming II (4 units)	Provides a continuing introduction to programming with an emphasis on problem- solving. It considers problems drawn from a variety of domains (including Computer Science) and emphasizes both the broader applicability of the relevant data structures and programming concepts, as well as the implementation of those structures and concepts in software. Topics include arrays, lists, stacks, queues, trees, searching and sorting, and exceptions.	Undergraduate	 Fall, Spring, Summer	C or higher in (CSC 110 or CSC 127A or ISTA 130 or ECE 175) or prior programming experience with Python or comparable programming language with department approval.	Regular Grades	Lecture        Required	None
CSC 144	 Discrete Mathematics for Computer Science I (3 units)	The first of a two-course sequence introducing mathematical concepts for Computer Science. Topics include: sets, functions, and relations; propositional and predicate logic; foundational combinatorics; discrete probability; modular arithmetic; and proofs.	Undergraduate	 Fall, Spring, Summer	[C or higher in(CSC 110 or ISTA 130 or ECE 175) or prior prog. lang. experience w/dept. approval] AND [PPL 60+ or SAT I MSS 640+ or ACT MATH 26+ or(C or higher in MATH 108 or 112)or 1 from MATH 113,116,120R,122A,122B,or125. Test scores exp. after 2 yrs]	Regular Grades	Lecture        Required	None
CSC 199	 Independent Study (1 - 3 units)	Qualified students working on an individual basis with professors who have agreed to supervise such work.	Undergraduate	 Fall, Spring	None	Alternative Grading: S, P, F	Independent Study   Required Repeatable: Course can be repeated a maximum of 99 times. Course typically offered:	None
CSC 199H	 Honors Independent Study (1 - 3 units)	Qualified students working on an individual basis with professors who have agreed to supervise such work.	Undergraduate	 Fall, Spring	Student must be active in the Honors College.	Regular Grades	Independent Study   Required Repeatable: Course can be repeated a maximum of 99 times. Course typically offered:	None
CSC 210	 Software Development (4 units)	An introduction to the development of large- scale software. Topics include modularization, design patterns, documentation, unit testing, source code control, build systems, debuggers, and performance tuning; all of the tools necessary for developing software as opposed to writing small programs.	Undergraduate	 Fall, Spring, Summer	C or higher in CSC 120.	Regular Grades	Lecture        Required	None
CSC 244	 Discrete Mathematics for Computer Science II (3 units)	A second course in mathematical concepts for computer science. Topics include: recurrence relations; proofs in propositional and first-order predicate logic; mathematical induction; graphs and trees; regular expressions and finite state machines.	Undergraduate	 Fall, Spring, Summer	C or better in CSC 120 and [C or better in CSC 144 or MATH 243 or MATH 323].	Regular Grades	Lecture        Required	None
CSC 245	 Introduction to Discrete Structures (3 units)	An introduction to mathematical concepts for Computer Science. Topics include first-order logic and logical arguments, proof techniques with an emphasis on mathematical induction, sets, relations and functions, properties of integers, counting methods, probability, and recurrences. Weekly laboratory.	Undergraduate	 Fall, Spring, Summer	Student must have earned a C grade or higher in (CSC 120 or CSC 127B or CSC 227).	Regular Grades	Lecture        Required	None
CSC 250	 Essential Computing for the Sciences (3 units)	This course teaches essential computing skills for students in scientific disciplines. No prior background in programming is required. The content focuses on three computational skills: (i) basic programming in a scripting language such as Python, and knowledge of its supported data structures; (ii) facility with the UNIX operating system environment, including file structure, regular expressions, and job control; (iii) essential database skills, including database accession and interfacing through the SQL query language.	Undergraduate	 Spring	Enrollment in this course is not open to Computer Science majors.	Regular Grades	Lecture        Required	None
CSC 252	 Computer Organization (3 units)	Basic machine organization; elementary hardware concepts; CPU internals. Machine operations and instructions; assembly language concepts and programming.	Undergraduate	 Fall, Spring	CSC 210 or CSC 127B.	Regular Grades	Discussion       May Be Offered	None
CSC 296	 Special Topics in Computer Science Seminar (1 - 3 units)	This undergraduate seminar studies special topics in Computer Science within a small group format. Through selected readings, presentations, and group discussions, students will take a discussion-based learning approach. Specific topics will be determined by current topics of interest by the instructor and in special cases, the students.	Undergraduate	 Fall, Spring	None	Alternative Grading: S, P, F	Seminar        Required Repeatable: Course can be repeated a maximum of 2 times. Course typically offered:	None
CSC 296B	 Seminar in Bioinformatics (1 unit)	This seminar course provides an overview of and introduction to the field of bioinformatics. Talks by faculty who do research in bioinformatics and computational biology, as well as by scientists from the biotechnology industry, give a sense of the current directions in the field.	Undergraduate	 Fall	None	Alternative Grading: S, P, F	Seminar        Required Repeatable: Course can be repeated a maximum of 2 times. Also offered as: ECOL 296B, MCB 296B	None
CSC 299	 Independent Study (1 - 4 units)	Qualified students working on an individual basis with professors who have agreed to supervise such work.	Undergraduate	 Fall, Spring, Summer	None	Alternative Grading: S, P, F	Independent Study   Required Repeatable: Course can be repeated a maximum of 99 times. Course typically offered:	None
CSC 299H	 Honors Independent Study (1 - 3 units)	Qualified students working on an individual basis with professors who have agreed to supervise such work.	Undergraduate	 Fall, Spring	Student must be active in the Honors College.	Regular Grades	Independent Study   Required Repeatable: Course can be repeated a maximum of 99 times. Course typically offered:	None
CSC 317	 Mobile Application Programming (3 units)	Students will learn how to develop applications for mobile devices. The course will cover the necessary programming language(s), development environment, and a number of platform-specific APIs commonly used in mobile applications such as maps, location services, notifications, camera, and local storage. Other mobile-specific software development topics will be considered such as programming with limited computational and battery resources, client/server architecture, and cloud synchronization.	Undergraduate	 Fall, Spring	CSC 210, or equivalent prior software development experience. Speak with the instructor or a computer science academic advisor to determine if your background will suffice. Students may not have completed or be enrolled in CSCV 381.	Regular Grades	Lecture        Required	None
CSC 335	 Object-Oriented Programming and Design (3 units)	Fundamentals of object-oriented software development. Includes design principles, inheritance, polymorphism, Unified Modeling Language (UML), testing, event-driven programming with graphical user interfaces, applications of design patterns, and use of existing frameworks. Weekly laboratory.	Undergraduate	 Fall, Spring	CSC 210 or CSC 127B.	Regular Grades	Lecture        Required	CSC 330, CSCV 335
CSC 337	 Web Programming (3 units)	Introduction to the techniques and technologies for developing dynamic web sites. Topics include a web server, PHP as the server-side scripting language, the MySQL database, JavaScript and AJAX for enriching web services, and page layout with HTML and CSS. Security concerns will be considered with details for prevention of such vulnerabilities in web applications. This course includes a team project to deploy a dynamic website. Weekly laboratory.	Undergraduate	 Fall, Spring	CSC 110 or CSC 127A or CSC 227 or ISTA 130 or ECE 175	Regular Grades	Lecture        Required	None
CSC 343	 Human Computer Interaction (3 units)	The course is a implementation-based introduction to basic concepts of human- computer interaction. Students will learn principles and skills for designing, programming, and evaluating interactive systems and demonstrate these skills through coursework. Topics include: system architecture, algorithms, data structures, verification, and software engineering techniques for implementing and managing interactive interfaces; methods of design and evaluation; and capabilities and limits of both computing devices and humans and their effect on design and implementation.	Undergraduate	 Fall, Spring	CSC 210 and CSC 244.	Regular Grades	Lecture        Required	None
CSC 345	 Analysis of Discrete Structures (3 units)	Introduction to and analysis of algorithms and characteristics of discrete structures. Course topics include algorithm analysis techniques, recurrence relations, structural induction, hierarchical structures, graphs, hashing, and sorting.	Undergraduate	 Fall, Spring	CSC 210 and CSC 244.	Regular Grades	Lecture        Required	CSC 346, CSC 355, CSCV 345
CSC 346	 Cloud Computing (3 units)	This course focuses on cloud programming, with an emphasis on using the cloud to solve Big Data problems. The course will not only look at how distributed systems, databases, networks, etc. are used to implement cloud computing platforms and cloud applications, but also the impact of the infinite scalability and pay-as-you-go on the platforms and applications.	Undergraduate	 Fall	CSC 120 or CSC 127B or CSC 227	Regular Grades	Lecture        Required	None
CSC 350	 Fundamentals of Computer Science Theory (3 units)	This course introduces the fundamentals of computer science theory, by surveying key concepts from (a) discrete mathematics, (b) data structures and algorithms, and	Undergraduate	 Fall	Grade of C or better in CSC 120. Not available for Computer Science pre-majors and majors.	Regular Grades	Discussion       May Be Offered	None
CSC 352	 Systems Programming and Unix (3 units)	Programming in C, including single and multi-dimensional arrays, lists, stacks, queues, trees, and bit manipulation. Unix topics, including debuggers, makefiles, shell programming, and other topics that support systems programming.	Undergraduate	 Fall, Spring	Major: COSC. Completion of CSC 210 and CSC 252.	Regular Grades	Laboratory       May Be Offered	CSCV 352
CSC 355	 Discrete Structures and Basic Algorithms (3 units)	Introduction to and analysis of algorithms and characteristics of discrete structures. Course topics include algorithm analysis, discrete data structures, sorting, hashing, search structures, basic design techniques (divide-and-conquer, dynamic programming, and greed) and graph algorithms.	Undergraduate	 Fall, Spring Online Campus: Fall, Spring	Advanced Standing: Engineering. ECE 275 and MATH 243. Students may not have completed or be enrolled in CSC 345.	Regular Grades	Lecture        Required	CSC 345, CSC 346, CSCV 345
CSC 372	 Comparative Programming Languages (3 units)	Introduction to several major high-level programming languages and their characteristics. Programming projects are required in at least three languages.	Undergraduate	 Spring	CSC 210 or 127B.	Regular Grades	Discussion       May Be Offered	CSC 327, CSCV 372, MIS 327, MIS 372
CSC 380	 Principles of Data Science (3 units)	The course introduces students to principles of data science that are necessary for computer scientists to make effective decisions in their professional careers. A number of computer science sub-disciplines now rely on data collection and analysis. For example, computer systems are now complicated enough that comparing the execution performance of two different programs becomes a statistical estimation problem rather than a deterministic computation. This course teaches students the basic principles of how to properly collect and process data sources in order to derive appropriate conclusions from them. The course has three main components: data analysis, machine learning, and a project where students apply the concepts discussed in class to a substantial open-ended problem.	Undergraduate	 Fall, Spring	CSC 210 and CSC 244.	Regular Grades	Lecture        Required	None
CSC 382	 Software Development in C++ (3 units)	This course will build upon students' knowledge of C to become proficient at programming in C++. Topics include testing, classes, templates, inheritance, operator overloading, object-oriented design, the Standard Template Library (STL), and event-driven programming with graphical user interfaces. This course also examines features of the newer versions of C++.- The course includes a large team project at the end of the semester. 3 Units. Grading basis: Regular Grades	Undergraduate	 Fall, Spring	CSC 352 or ECE 275	None	Lecture        Required	None
CSC 391	 Preceptorship (1 - 3 units)	Specialized work on an individual basis, consisting of instruction and practice in actual service in a department, program, or discipline. Teaching formats may include seminars, in-depth studies, laboratory work and patient study.	Undergraduate	 Fall, Spring, Summer	None	Alternative Grading: S, P, F	Independent Study   Required Repeatable: Course can be repeated a maximum of 99 times. Course typically offered:	None
CSC 392	 Directed Research (1 - 3 units)	Individual or small group research under the guidance of faculty.	Undergraduate	 Fall, Spring	None	Regular Grades	Independent Study   Required Repeatable: Course can be repeated for a maximum of 6 units. Course typically offered:	None
CSC 399	 Independent Study (1 - 3 units)	Qualified students working on an individual basis with professors who have agreed to supervise such work.	Undergraduate	 Fall, Spring	None	Alternative Grading: S, P, F	Independent Study   Required Repeatable: Course can be repeated a maximum of 99 times. Course typically offered:	None
CSC 399H	 Honors Independent Study (1 - 3 units)	Qualified students working on an individual basis with professors who have agreed to supervise such work.	Undergraduate	 Fall, Spring	Student must be active in the Honors College.	Regular Grades	Independent Study   Required Repeatable: Course can be repeated a maximum of 99 times. Course typically offered:	None
CSC 401A	 Symbolic Logic (3 units)	Intermediate propositional logic and quantificational theory, natural deduction, axiom systems, elementary metatheorems, introduction to notions of modal logic, selected topics in philosophy of logic. Credit allowed for only one of these courses: PHIL 401A, PHIL 402.	Undergraduate	 Fall	None	Regular Grades	Lecture        Required	CSC 401A, MATH 401A Also offered as: MATH 401A, PHIL 401A Co-convened with:
CSC 401B	 Symbolic Logic (3 units)	Advanced propositional logic and quantification theory; metatheorems on consistency, independence, and completeness; set theory, number theory, and modal theory; recursive function theory and Goedel's incompleteness theorem.	Undergraduate	 Spring	None	Regular Grades	Lecture        Required	CSC 401B, MATH 401B Also offered as: MATH 401B, PHIL 401B Co-convened with:
CSC 422	 Introduction to Parallel and Distributed Programming (3 units)	Concepts and applications of parallel and distributed programs. Process interaction using shared variables and message passing; parallel computing; development of correct programs; general problem solving techniques; scientific computing; distributed systems. Programming assignments on multiple processor machines.	Undergraduate	 Spring	CSC 252, CSC 345, CSC 352.	Regular Grades	Discussion       May Be Offered	CSCV 422
CSC 425	 Computer Networking (3 units)	Theory and practice of computer networks, emphasizing the principles underlying the design of network software and the role of the communications system in distributed computing. Topics include routing, flow and congestion control, end-to-end protocols, and multicast.	Undergraduate	 Spring	CSC 252, and CSC 352.	Regular Grades	Discussion       May Be Offered	None
CSC 433	 Computer Graphics (3 units)	Theory and practice of computer graphics: basic graphics programming, 2D and 3D transformations, clipping, 2D and 3D viewing, hierarchical modeling, hidden surface removal, lighting and shading, color, ray-tracing, radiosity, curve and surface modeling, and animation.	Undergraduate	 Spring	Major: COSC. CSC 252, CSC 335, CSC 345, CSC 352, and (MATH 215 or MATH 313).	Regular Grades	Discussion       May Be Offered	None
CSC 436	 Software Engineering (3 units)	Introduces fundamental software engineering techniques for developing correct, efficient, reliable, maintainable, and evolvable software for large software projects. The class project gives an experience in using evolutionary software development processes for developing a high-quality, evolvable software product that addresses emerging customer requirements.	Undergraduate	 Fall	CSC 252, CSC 335, CSC 345, and CSC 352.	Regular Grades	Discussion       May Be Offered	CSC 435
CSC 437	 Geometric Algorithms (3 units)	The study of algorithms for geometric objects, using a computational geometry approach, with an emphasis on applications for graphics, VLSI, GIS, robotics, and sensor networks. Topics may include the representation and overlaying of maps, finding nearest neighbors, solving linear programming problems, and searching geometric databases.	Undergraduate	 Fall	Major: COSC and CSC 345.	Regular Grades	Discussion       May Be Offered	None
CSC 438	 Computational Linguistics (3 units)	Fundamentals of formal language theory; syntactic and semantic processing; the place of world knowledge in natural language processing.	Undergraduate	 Fall	None	Regular Grades	Lecture        Required	CSC 438, PSY 438 Also offered as: LING 438, PSY 438 Co-convened with: CSC 538 Course typically offered:
CSC 439	 Statistical Natural Language Processing (3 units)	This course introduces the key concepts underlying statistical natural language processing. Students will learn a variety of techniques for the computational modeling of natural language, including: n-gram models, smoothing, Hidden Markov models, Bayesian Inference, Expectation Maximization, Viterbi, Inside-Outside Algorithm for Probabilistic Context-Free Grammars, and higher-order language models.	Undergraduate	 Fall	Students may not take ISTA 355 concurrently with LING/CSC/ISTA	Regular Grades	Lecture        Required	CSC 439
CSC 444	 Data Visualization (3 units)	This course will present the fundamentals of data visualization, the art and science of using a computer to generate visual depictions of data. The course will present the foundations of graphic design, perceptual psychology and cognitive science, as well as the algorithmic basis for many for the visualization techniques. While statistical techniques may determine correlations among the data, visualization helps us frame what questions to ask.The course is targeted at students looking for effective ways of understanding data from their own fields, as well as students interested in learning the fundamentals that will enable them to build and improve the state of the art. The successful student will learn to design, critique and improve data visualizations.	Undergraduate	 Spring	Major: COSC, CSC 345, and CSC 335.	Regular Grades	Lecture        Required	None
CSC 445	 Algorithms (3 units)	Introduction to the design and analysis of algorithms: basic analysis techniques (asymptotics, sums, recurrences); basic design techniques (divide and conquer, dynamic programming, greedy, amortization); acquiring an algorithm repertoire (sorting, median finding, strong components, spanning trees, shortest paths, maximum flow, string matching); and handling intractability (approximation algorithms, branch and bound).	Undergraduate	 Fall, Spring	CSC 345.	Regular Grades	Discussion       May Be Offered	CSCV 445
CSC 447	 Green Computing (3 units)	This course covers fundamental principles of energy management faced by designers of hardware, operating systems, and data centers. We will explore basic energy management option in individual components such as CPUs, network interfaces, hard drives, memory. We will further present the energy management policies at the operating system level that consider performance vs. energy saving tradeoffs. Finally we will consider large scale data centers where energy management is done at multiple layers from individual components in the system to shutting down entries subset of machines. We will also discuss energy generation and delivery and well as cooling issues in large data centers. In addition to the assignments listed for undergraduates,	Undergraduate	 Spring	Major: COSC, CSC 252 and CSC 352.	Regular Grades	Lecture        Required	None
CSC 450	 Algorithms in Bioinformatics (3 units)	This course introduces fundamental results in discrete algorithms for combinatorial problems in bioinformatics and computational biology. The emphasis is on realistic models of computational problems that arise in the analysis of biological data, and practical algorithms for their solution. The content has depth in the area of biological sequence analysis, and breadth in areas such as phylogeny construction, protein structure prediction, and genome rearrangement analysis. Grades are based on homeworks, exams, programming projects, and a class presentation.	Undergraduate	 Fall	CSC 345	Regular Grades	Lecture        Required	None
CSC 452	 Principles of Operating Systems (3 units)	Concepts of modern operating systems; concurrent processes; process synchronization and communication; resource allocation; kernels; deadlock; memory management; file systems.	Undergraduate	 Fall, Spring	CSC 252, CSC 345, and CSC 352.	Regular Grades	Lecture        Required	CSCV 452
CSC 453	 Compilers and Systems Software (3 units)	Basic concepts of compilation and related systems software. Topics include lexical analysis, parsing, semantic analysis, code generation; assemblers, loaders, linkers; debuggers.	Undergraduate	 Spring	Major: COSC, CSC 252, CSC 345, and CSC 352.	Regular Grades	Lecture        Required	CSCV 453
CSC 455	 Philosophy and Artificial Intelligence (3 units)	Interdisciplinary problems lying at the interface of philosophy and artificial intelligence.	Undergraduate	 Fall, Spring	None	Regular Grades	Lecture        Required	CSC 455, PSY 455
CSC 460	 Database Design (3 units)	Functions of a database system. Data modeling and logical database design. Query languages and query optimization. Efficient data storage and access. Database access through standalone and web applications.	Undergraduate	 Fall, Spring	CSC 335, and CSC 345.	Regular Grades	Discussion       May Be Offered	CSCV 460
CSC 466	 Computer Security (3 units)	This is an introductory course covering the fundamentals of computer security. In particular, the course will cover basic concepts of computer security such as threat models and security policies, and will show how these concepts apply to specific areas such as communication security, software security, operating systems security, network security, web security, and hardware-based security.	Undergraduate	 Fall, Spring	CSC 252, and CSC 352.	Regular Grades	Lecture        Required	None
CSC 473	 Automata, Grammars and Languages (3 units)	Introduction to models of computation (finite automata, pushdown automata, Turing machines), representations of languages (regular expressions, context-free grammars), and the basic hierarchy of languages (regular, context-free, decidable, and undecidable languages).	Undergraduate	 Spring	Major: COSC and CSC 345.	Regular Grades	Discussion       May Be Offered	CSCV 473, MATH 473
CSC 474A	 Computer-Aided Logic Design (3 units)	Tabular minimization of single and multiple output Boolean functions, NMOS and CMOS realizations, synthesis of sequential circuits, RTL description, laboratory exercises.	Undergraduate	 Fall	None	Regular Grades	Lecture        Required	CSC 474A Also offered as: ECE 474A Co-convened with: CSC 574A Course typically offered:
CSC 477	 Introduction to Computer Vision (3 units)	Overview of algorithms for analyzing image data. Topics include image formation, physics-based vision, linear filtering, edge detection, multiple view geometry, segmentation, tracking, and recognition.	Undergraduate	 Fall	CSC 252, CSC 335, CSC 345, CSC 352, and (MATH 215 or MATH	Regular Grades	Discussion       May Be Offered	None
CSC 480	 Principles of Machine Learning (3 units)	Students will learn why machine learning is a fundamentally different way of writing computer programs from traditional programming, and why this is often an attractive way of solving practical problems. Machine learning is all about automatic ways for computers to collect and/or adapt to data to make better predictions and decisions or gain insight; students will learn both advantages and unique risks that this approach offers. They will learn the fundamental frameworks, computational methods, and algorithms that underlie current machine learning practice, and how to derive and implement many of them.	Undergraduate	 Fall, Spring	Major: COSCBA or COSCBS. Completion of CSC 380 and MATH 313.	Regular Grades	Lecture        Required	None
CSC 483	 Text Retrieval and Web Search (3 units)	Most of the web data today consists of unstructured text. Of course, the fact that this data exists is irrelevant, unless it is made available such that users can quickly find information that is relevant for their needs. This course will cover the fundamental knowledge necessary to build these systems, such as web crawling, index construction and compression, Boolean, vector-based, and probabilistic retrieval models, text classification and clustering, link analysis algorithms such as PageRank, and computational advertising. The students will also complete one programming project, in which they will construct one complex application that combines multiple algorithms into a system that solves real-world problems.	Undergraduate	 Fall	Major: COSC. CSC 345.	Regular Grades	Lecture        Required	None
CSC 492	 Directed Research (1 - 3 units)	Individual or small group research under the guidance of faculty.	Undergraduate	 Fall, Spring	None	Regular Grades	Independent Study   Required Repeatable: Course can be repeated for a maximum of 6 units. Course typically offered:	None
CSC 493	 Internship (1 - 3 units)	Specialized work on an individual basis, consisting of training and practice in actual service in a technical, business, or governmental establishment. Such work must be approved and supervised by a Computer Science faculty member. Available to Computer Science majors. May be repeated: Between C SC 293 and 493, a total of 6 units of internship may be earned.	Undergraduate	 Fall, Spring, Summer	None	Alternative Grading: S, P, F	Independent Study   Required Repeatable: Course can be repeated a maximum of 99 times. Course typically offered:	None
CSC 496	 Special Topics in Computer Science Seminar (1 - 3 units)	This undergraduate seminar studies special topics in Computer Science within a small group format. Through selected readings, presentations, and group discussions, students will take a discussion-based learning approach. Specific topics will be determined by current topics of interest by the instructor and in special cases, the students.	Undergraduate	 Fall, Spring	None	Regular Grades	Seminar        Required Repeatable: Course can be repeated a maximum of 2 times. Course typically offered:	None
CSC 498H	 Honors Thesis (3 units)	An honors thesis is required of all the students graduating with honors. Students ordinarily sign up for this course as a two-semester sequence. The first semester the student performs research under the supervision of a faculty member; the second semester the student writes an honors thesis.	Undergraduate	 Fall, Spring	Student must be active in the Honors College.	Regular Grades	Independent Study   Required Repeatable: Course can be repeated for a maximum of 6 units. Equivalent to: CSCV 498H	None
CSC 499	 Independent Study (1 - 4 units)	Qualified students working on an individual basis with professors who have agreed to supervise such work.	Undergraduate	 Fall, Spring	None	Alternative Grading: S, P, F	Independent Study   Required Repeatable: Course can be repeated a maximum of 99 times. Course typically offered:	None
CSC 499H	 Honors Independent Study (1 - 4 units)	Qualified students working on an individual basis with professors who have agreed to supervise such work.	Undergraduate	 Fall, Spring	Student must be active in the Honors College.	Regular Grades	Independent Study   Required Repeatable: Course can be repeated a maximum of 99 times. Course typically offered:	None
CSC 501A	 Symbolic Logic (3 units)	Intermediate propositional logic and quantificational theory, natural deduction, axiom systems, elementary metatheorems, introduction to notions of modal logic, selected topics in philosophy of logic. Graduate-level requirements include an in-depth research project on a central theme or topic of the course. Courses for which students receive the grade of P (Pass) do not satisfy requirements for the M.A. or Ph.D. or minor in philosophy.	Graduate	 Fall	None	Student Option ABCDE/PF	Lecture        Required	CSC 501A, MATH 501A Also offered as: MATH 501A, PHIL 501A Co-convened with: CSC 401A
CSC 501B	 Symbolic Logic (3 units)	Advanced propositional logic and quantification theory; metatheorems on consistency, independence, and completeness; set theory, number theory, and modal theory; recursive function theory and Goedel's incompleteness theorem. Graduate-level requirements include an in-depth research project on a central theme or topic of the course. Courses for which students receive the grade of P (Pass) do not satisfy requirements for the M.A. or Ph.D. or minor in philosophy.	Graduate	 Spring	None	Student Option ABCDE/PF	Lecture        Required	CSC 501B, MATH 501B Also offered as: MATH 501B, PHIL 501B Co-convened with: CSC 401B
CSC 502	 Mathematical Logic (3 units)	[Taught Fall semester in even-numbered years] Sentential calculus, predicate calculus; consistency, independence, completeness, and the decision problem. Designed to be of interest to majors in mathematics or philosophy. Graduate-level requirements include more extensive problem sets or advanced projects.	Graduate	 Fall (even years only)	None	Regular Grades	Lecture        Required	CSC 502, PHIL 502 Also offered as: MATH 502, PHIL 502 Co-convened with:
CSC 520	 Principles of Programming Languages (3 units)	Important programming language concepts, including types, control and data abstraction, denotational semantics, declarative and object-oriented languages, implementation issues.	Graduate	 Spring	None	Regular Grades	Lecture        Required	None
CSC 522	 Parallel and Distributed Computing (3 units)	Basic concepts and semantics of concurrent programs. Synchronization methods and programming techniques: locks, semaphores, monitors, message passing, programming paradigms. High performance computing: hardware, applications, programming tools and techniques, parallelizing compilers, performance tuning. Distributed computing: RPC and rendezvous, distributed systems, decentralized control algorithms.	Graduate	 Fall	None	Regular Grades	Lecture        Required	None
CSC 525	 Principles of Computer Networking (3 units)	Intensive course in theory and practice of computer networks, emphasizing the underlying the design of network software and the role of the communications system in distributed computing. Topics include wireless and mobile networking, resource management, routing, flow and congestion control, multicast and data representation, and RPC.	Graduate	 Fall	None	Regular Grades	Lecture        Required	None
CSC 533	 Computer Graphics (3 units)	Theory and practice of computer graphics: basic graphics programming, 2D and 3D transformations, clipping, 2D and 3D viewing, hierarchical modeling, hidden surface removal, lighting and shading, color, ray-tracing, radiosity, curve and surface modeling, and animation. Graduate-level requirements include more extensive and challenging programming assignments.	Graduate	 Spring	None	Regular Grades	Lecture        Required	None
CSC 535	 Probabilistic Graphical Models (3 units)	Probabilistic graphical modeling and inference is a powerful modern approach to representing the combined statistics of data and models, reasoning about the world in the face of uncertainty, and learning about it from data. It cleanly separates the notions of representation, reasoning, and learning. It provides a principled framework for combining multiple source of information such as prior knowledge about the world with evidence about a particular case in observed data. This course will provide a solid introduction to the methodology and associated techniques, and show how they are applied in diverse domains ranging from computer vision to molecular biology to astronomy.	Graduate	 Spring	None	Regular Grades	Lecture        Required	None
CSC 536	 Software Engineering (3 units)	Introduces fundamental software engineering techniques for developing correct, efficient, reliable, maintainable, and evolvable software for large software projects. The class project gives an experience in using evolutionary software development processes for developing a high-quality, evolvable software product that addresses emerging customer requirements. Graduate-level requirements include extra reading assignments on advanced topics and home assignments on these readings.	Graduate	 Spring	None	Regular Grades	Lecture        Required	None
CSC 537	 Geometric Algorithms (3 units)	The study of algorithms for geometric objects, using a computational geometry approach, with an emphasis on applications for graphics, VLSI, GIS, robotics, and sensor networks. Topics may include the representation and overlaying of maps, finding nearest neighbors, solving linear programming problems, and searching geometric databases.	Graduate	 Fall	None	Regular Grades	Lecture        Required	None
CSC 538	 Computational Linguistics (3 units)	Fundamentals of formal language theory; syntactic and semantic processing; the place of world knowledge in natural language processing. Graduate-level requirements include a greater number of assignments and a higher level of performance.	Graduate	 Fall	None	Regular Grades	Laboratory       May Be Offered	CSC 538, PSY 538 Also offered as: LING 538, PSY 538 Co-convened with: CSC 438 Course typically offered:
CSC 539	 Statistical Natural Language Processing (3 units)	This course introduces the key concepts underlying statistical natural language processing. Students will learn a variety of techniques for the computational modeling of natural language, including: n-gram models, smoothing, Hidden Markov models, Bayesian Inference, Expectation Maximization, Viterbi, Inside-Outside Algorithm for Probabilistic Context-Free Grammars, and higher-order language models. Graduate-level requirements include assignments of greater scope than undergraduate assignments. In addition to being more in- depth, graduate assignments are typically longer and additional readings are required.	Graduate	 Fall (even years only)	None	Regular Grades	Lecture        Required	CSC 539
CSC 543	 Theory of Graphs and Networks (3 units)	[Taught Fall semester in even-numbered years] Undirected and directed graphs, connectivity, circuits, trees, partitions, planarity, coloring problems, matrix methods, applications in diverse disciplines. Graduate-level requirements include more extensive problem sets or advanced projects.	Graduate	 Fall	None	Regular Grades	Lecture        Required	CSC 543
CSC 544	 Advanced Data Visualization (3 units)	Data visualization is a research area that focuses on the use of visualization techniques to help people understand and analyze data. Visualization allows us to perceive relationships, patterns, and trends. While statistical techniques may determine correlations among the data, visualization helps us frame what questions to ask. Providing efficient and effective data visualization is a difficult challenge in many real world examples. One challenge lies in developing algorithmically efficient methods to visualize large and complex data sets.	Graduate	 Fall	None	Regular Grades	Lecture        Required	None
CSC 545	 Design and Analysis of Algorithms (3 units)	Time, space complexity, recurrences, algorithm design techniques, lower bounds; graph, matrix, set algorithms; sorting, fast Fourier transform, arithmetic complexity, intractable problems.	Graduate	 Spring	None	Regular Grades	Lecture        Required	None
CSC 547	 Green Computing (3 units)	This course covers fundamental principles of energy management faced by designers of hardware, operating systems, and data centers. We will explore basic energy management option in individual components such as CPUs, network interfaces, hard drives, memory. We will further present the energy management policies at the operating system level that consider performance vs. energy saving tradeoffs. Finally we will consider large scale data centers where energy management is done at multiple layers from individual components in the system to shutting down entries subset of machines. We will also discuss energy generation and delivery and well as cooling issues in large data centers. In addition to the assignments listed for undergraduates, Graduate-level requirements include a detailed review of the three recent conference publications dealing with energy efficiency.	Graduate	 Spring	None	Regular Grades	Lecture        Required	None
CSC 550	 Algorithms in Bioinformatics (3 units)	This course introduces fundamental results in discrete algorithms for combinatorial problems in bioinformatics and computational biology. The emphasis is on realistic models of computational problems that arise in the analysis of biological data, and practical algorithms for their solution. The content has depth in the area of biological sequence analysis, and breadth in areas such as phylogeny construction, protein structure prediction, and genome rearrangement analysis. Grades are based on homeworks, exams, programming projects, and a class presentation.	Graduate	 Fall	None	Regular Grades	Lecture        Required	None
CSC 552	 Advanced Operating Systems (3 units)	Operating system design, implementation and modeling; deadlock and memory management models; protection mechanisms; operating systems for parallel and distributed systems.	Graduate	 Spring	None	Regular Grades	Lecture        Required	None
CSC 553	 Principles of Compilation (3 units)	Detailed study of advanced compilation: translator writing systems, attribute grammars, flow analysis, optimization, register allocation, code generation, compiling for modern architectures.	Graduate	 Fall, Spring	None	Regular Grades	Lecture        Required	None
CSC 555	 Philosophy and Artificial Intelligence (3 units)	Interdisciplinary problems lying at the interface of philosophy and artificial intelligence. Courses for which students receive the grade of P (Pass) do not satisfy requirements for the M.A. or Ph.D. or minor in philosophy. Graduate-level requirements include an in-depth research paper on a central theme or topic of the course.	Graduate	 Spring	None	Student Option ABCDE/PF	Lecture        Required	COGS 555, CSC 555, PSY 555
CSC 560	 Database Systems Implementation (3 units)	Emphasis on DBMS architecture and implementation issues such as storage structures, multidimensional index structures, query optimization, concurrency control and recovery, and parallel database systems.	Graduate	 Fall	None	Regular Grades	Lecture        Required	None
CSC 566	 Computer Security (3 units)	This is an introductory course covering the fundamentals of computer security. In particular, the course will cover basic concepts of computer security such as threat models and security policies, and will show how these concepts apply to specific areas such as communication security, software security, operating systems security, network security, web security, and hardware-based security. Graduate-level requirements include an additional project/essay/in-class presentation.	Graduate	 Spring	None	Regular Grades	Lecture        Required	None
CSC 573	 Theory of Computation (3 units)	Chomsky hierarchy, undecidability; general recursive functions; recursion theory; computational complexity theory, NP-complete and provably intractable problems.	Graduate	 Fall	None	Regular Grades	Lecture        Required	MATH 573 Also offered as: MATH 573 Course typically offered:
CSC 574A	 Computer-Aided Logic Design (3 units)	Tabular minimization of single and multiple output Boolean functions, NMOS and CMOS realizations, synthesis of sequential circuits, RTL description, laboratory exercises.	Graduate	 Spring	None	Regular Grades	Lecture        Required	CSC 574A Also offered as: ECE 574A Co-convened with: CSC 474A Course typically offered:
CSC 576	 Computer Architecture (3 units)	Design of computers, including instruction set design, processor implementation, pipelining, memory hierarchy, vector processors, and parallel architectures. Emphasis on hardware and software tradeoffs.	Graduate	 Fall	None	Regular Grades	Lecture        Required	None
CSC 577	 Introduction to Computer Vision (3 units)	Overview of algorithms for analyzing image data. Topics include image formation, physics-based vision, linear filtering, edge detection, multiple view geometry, segmentation, tracking, and recognition. Graduate-level requirements include additional challenging assignments or a research oriented project and participate in the weekly vision group meeting. Grading basis: Regular Grades	Graduate	 Fall, Spring	None	None	Lecture        Required	COGS 577 Also offered as: COGS 577 Co-convened with: CSC 477 Course typically offered:
CSC 580	 Principles of Machine Learning (3 units)	Students will learn why machine learning is a fundamentally different way of writing computer programs from traditional programming, and why this is often an attractive way of solving practical problems. Machine learning is all about automatic ways for computers to collect and/or adapt to data to make better predictions and decisions or gain insight; students will learn both advantages and unique risks that this approach offers. They will learn the fundamental frameworks, computational methods, and algorithms that underlie current machine learning practice, and how to derive and implement many of them.	Graduate	 Spring	Graduate major or minor: CSC.	Regular Grades	Lecture        Required	None
CSC 581	 Advanced Computational Linguistics (3 units)	This course provides a hands-on project-based approach to particular problems and issues in computational linguistics.	Graduate	 Fall	None	Regular Grades	Lecture        Required	CSC 581 Also offered as: LING 581 Course typically offered:
CSC 583	 Text Retrieval and Web Search (3 units)	Most of the web data today consists of unstructured text. Of course, the fact that this data exists is irrelevant, unless it is made available such that users can quickly find information that is relevant for their needs. This course will cover the fundamental knowledge necessary to build these systems, such as web crawling, index construction and compression, Boolean, vector-based, and probabilistic retrieval models, text classification and clustering, link analysis algorithms such as PageRank, and computational advertising. The students will also complete one programming project, in which they will construct one complex application that combines multiple algorithms into a system that solves real-world problems.	Graduate	 Fall, Spring	Graduate major or minor: CSC.	Regular Grades	Lecture        Required	None
CSC 585	 Algorithms for Natural Language Processing (3 units)	This course covers important algorithms useful for natural language processing (NLP), including distributional similarity algorithms such as word embeddings, recurrent and recursive neural networks (NN), probabilistic graphical models useful for sequence prediction, and parsing algorithms such as shift-reduce. This course will focus on the algorithms that underlie NLP, rather than the application of NLP to various problem domains.	Graduate	 Fall, Spring	None	Regular Grades	Lecture        Required	None
CSC 588	 Machine Learning Theory (3 units)	Students will learn how and when machine learning is possible/impossible as well as various algorithms with theoretical guarantees under minimal assumptions. Specifically, the course offers formulation of learning environments (e.g., stochastic and adversarial worlds with possibly limited feedback), fundamental limits of learning in these environments, various algorithms concerning sample efficiency, computational efficiency, and generality. Throughout, students will not only learn fundamental tools upholding the current understanding of machine learning systems in the research community but also develop skills of adapting these techniques to their own research needs such as developing new algorithms for large-scale, data-driven applications.	Graduate	 Fall, Spring, Summer	Graduate major or minor: CSC.	Regular Grades	Lecture        Required	None
CSC 593	 Internship (1 - 6 units)	Specialized work on an individual basis, consisting of training and practice in actual service in a technical, business, or governmental establishment.	Graduate	 Fall, Spring	None	Alternative Grading: S, P, F	Independent Study  Required	None
CSC 599	 Independent Study (1 - 4 units)	Qualified students working on an individual basis with professors who have agreed to supervise such work. Graduate students doing independent work which cannot be classified as actual research will register for credit under course number 599, 699, or 799.	Graduate	 Fall, Spring	None	Alternative Grading: S, P, F	Independent Study   Required Repeatable: Course can be repeated a maximum of 99 times. Course typically offered:	None
CSC 695A	 Graduate Colloquium (1 unit)	Presentation of current research topics in Computer Science.	Graduate	 Fall, Spring	Graduate major or minor: CSC.	Alternative Grading: S, P, F	Colloquium       Required Repeatable: Course can be repeated for a maximum of 7 units. Course typically offered:	None
CSC 696B	 Advanced Topics in Parallel, Distributed, and High-Performance Computing (3 units)	The goal of this graduate seminar course is to learn more about research in the general field of parallel, distributed, and high-performance computing.  In this course, we will read and review research papers on parallel, distributed, and high-performance computing. We will also learn how to do research in computer science by reading, evaluating, presenting, and conducting a research project in parallel, distributed, or high-performance computing. Specific topics to be determined by current literature and faculty and student interest.	Graduate	 Fall, Spring	Graduate major or minor: CSC.	Regular Grades	Seminar        Required Repeatable: Course can be repeated a maximum of 99 times. Course typically offered:	None
CSC 696C	 Advanced Topics in Computer Science (3 units)	This is a research-oriented seminar course addressing selected advanced current topics in computer science. The specific computer science domain will be selected based on current literature as well as faculty and student interests. Exemplar domains include computer architecture, cyber-physical systems, domain-specific applications, education, embedded & real-time systems, formal verification, operations research, robotics, software engineering, ubiquitous computing, and web technologies.	Graduate	 Fall, Spring	Graduate major or minor: CSC.	Regular Grades	Seminar        Required Repeatable: Course can be repeated a maximum of 99 times. Course typically offered:	None
CSC 696D	 Advanced Topics in Visualization and Graphics (3 units)	This is a research-oriented seminar course addressing selected advanced current topics in visualization and graphics, broadly defined to include both the theory and applications. Exemplar domains include data visualization, computer graphics, computational geometry, visual analytics, data analysis, imaging, visual interfaces, geometric modeling, perception & cognition, computer-aided geometric design, display technologies, and virtual & augmented reality. Within a domain, topics will be selected based on current literature as well as faculty and student interests.	Graduate	 Fall, Spring	Graduate major or minor: CSC.	Regular Grades	Seminar        Required Repeatable: Course can be repeated a maximum of 99 times. Course typically offered:	None
CSC 696E	 Advanced Topics in Algorithms (3 units)	The goal of this graduate seminar course is to learn more about research in the general field of algorithms. In this course, we will read and review research papers on algorithms. We will also learn how to do research in computer science by reading, evaluating, presenting, and conducting a research project in algorithms. Specific topics to be determined by current literature and faculty and student interest.	Graduate	 Fall, Spring	Graduate major or minor: CSC.	Regular Grades	Seminar        Required Repeatable: Course can be repeated a maximum of 99 times. Course typically offered:	None
CSC 696F	 Advanced Topics in Computer Systems (3 units)	The goal of this graduate seminar course is to learn more about research in the general field of computer systems. In this course, we will read and review research papers on computer systems. We will also learn how to do research in computer science by reading, evaluating, presenting, and conducting a research project in computer systems. Specific topics to be determined by current literature and faculty and student interest.	Graduate	 Fall, Spring	Graduate major or minor: CSC.	Regular Grades	Seminar        Required Repeatable: Course can be repeated a maximum of 99 times. Course typically offered:	None
CSC 696G	 Topics in Computational Linguistics (3 units)	The development and exchange of scholarly information, usually in a small group setting with an in depth investigation of computational linguistics theory and application. The scope of work shall consist of research by course registrants, with the exchange of the results of such research through discussion, reports, and/or papers.	Graduate	 Fall, Spring	None	Regular Grades	Seminar        Required Repeatable: Course can be repeated for a maximum of 18 units. Equivalent to: CSC 696G	None
CSC 696H	 Advanced Topics in Artificial Intelligence (3 units)	The goal of this graduate seminar course is to learn more about research in the general field of artificial intelligence. In this course, we will read and review research papers on artificial intelligence. We will also learn how to do research in computer science by reading, evaluating, presenting, and conducting a research project in artificial intelligence. Specific topics to be determined by current literature and faculty and student interest.	Graduate	 Fall, Spring	Graduate major or minor: CSC.	Regular Grades	Seminar        Required Repeatable: Course can be repeated a maximum of 99 times. Course typically offered:	None
CSC 696I	 Advanced Topics in Security (3 units)	The goal of this graduate seminar course is to learn more about research in the general field of computer security. In this course, we will read and review research papers on computer security. We will also learn how to do research in computer science by reading, evaluating, presenting, and conducting a research project in computer security. Specific topics to be determined by current literature and faculty and student interest.	Graduate	 Fall, Spring	Graduate major or minor: CSC.	Regular Grades	Seminar        Required Repeatable: Course can be repeated a maximum of 99 times. Course typically offered:	None
CSC 696J	 Advanced Topics in Data Systems (3 units)	The goal of this graduate seminar course is to learn more about research in the general field of data systems. In this course, we will read and review research papers on data systems. We will also learn how to do research in computer science by reading, evaluating, presenting, and conducting a research project in data systems. Specific topics to be determined by current literature and faculty and student interest.	Graduate	 Fall, Spring	Graduate major or minor: CSC.	Regular Grades	Seminar        Required Repeatable: Course can be repeated a maximum of 99 times. Course typically offered:	None
CSC 699	 Independent Study (1 - 4 units)	Qualified students working on an individual basis with professors who have agreed to supervise such work. Graduate students doing independent work which cannot be classified as actual research will register for credit under course number 599, 699, or 799.	Graduate	 Fall, Spring	None	Alternative Grading: S, P, F	Independent Study   Required Repeatable: Course can be repeated a maximum of 99 times. Course typically offered:	None
CSC 799	 Independent Study (1 - 4 units)	Qualified students working on an individual basis with professors who have agreed to supervise such work. Graduate students doing independent work which cannot be classified as actual research will register for credit under course number 599, 699, or 799.	Graduate	 Fall, Spring	None	Alternative Grading: S, P, F	Independent Study   Required Repeatable: Course can be repeated a maximum of 99 times. Course typically offered:	None
CSC 900	 Research (1 - 6 units)	Individual research, not related to thesis or dissertation preparation, by graduate students.	Graduate	 Fall, Spring	None	Alternative Grading: S, P, F	Independent Study   Required Repeatable: Course can be repeated a maximum of 99 times. Course typically offered:	None
CSC 910	 Thesis (1 - 6 units)	Research for the master's thesis (whether library research, laboratory or field observation or research, artistic creation, or thesis writing). Maximum total credit permitted varies with the major department.	Graduate	 Fall, Spring	None	Alternative Grading: S, P, F	Independent Study   Required Repeatable: Course can be repeated a maximum of 99 times. Course typically offered:	None
CSC 920	 Dissertation (1 - 9 units)	Research for the doctoral dissertation (whether library research, laboratory or field observation or research, artistic creation, or dissertation writing).	Graduate	 Fall, Spring	None	Alternative Grading: S, P, F	Independent Study   Required Repeatable: Course can be repeated a maximum of 99 times. Course typically offered:	None
